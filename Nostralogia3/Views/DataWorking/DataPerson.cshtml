
@{
    ViewData["Title"] = "DataPerson";
    Layout = "~/Views/Shared/_Layout2.cshtml";
    
}
@model Nostralogia3.ViewModels.PersonalDataVM
@using Nostralogia3.Extensions

<div class="row">
    <div class="col-md-7 ">
        @using (Html.BeginForm("UpdatePersonalData", "DataWorking", FormMethod.Post))
        {
            @Html.HiddenFor(x=>x._model.Id)
            <section class="bg-light">
                <div class="container">
                    <div class="col-md-10 form-group">
                        <label class="text-danger font-weight-bold">@Model.ErrorMessage</label>
                    </div>
                    <fieldset>
                        <legend class="text-dark ml-lg-4 font-weight-bold">Personal Data Form</legend>
                        <div class="col-sm-5 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.FirstName)                           
                            @Html.EditorFor(x => x._model.FirstName, Model.ReadOnly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control disabledctrl" } } : new { htmlAttributes = new { @class = "form-control" } })
                       
                       </div>

                       <div class="col-md-5 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.SecondName)
                            @Html.EditorFor(x => x._model.SecondName, Model.ReadOnly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control disabledctrl " } } : new { htmlAttributes = new { @class = "form-control" } })
                        </div>



                        @await Html.PartialAsync("~/Views/UserControls/_SimpleCalendarView.cshtml", Model.SimpleCalendarModel, nameof(Model.SimpleCalendarModel))

                        <div class="mt-5 mb-4 ml-3">
                            <span class="text-dark ">It is Exact time:</span> <span>@Html.RadioButtonFor(m => m.IsInterval, false, new { id="rbExact"}) </span>
                            <span class="text-dark ml-3 "> Interval: </span>  <span> @Html.RadioButtonFor(m => m.IsInterval, true, new { id = "rbInterval" }) </span>
                        </div>

                        @await Html.PartialAsync("~/Views/UserControls/_SimpleTimePickerView.cshtml", Model.TimeFrom, nameof(Model.TimeFrom))
                        <div id="timeTo">
                            @await Html.PartialAsync("~/Views/UserControls/_SimpleTimePickerView.cshtml", Model.TimeTo, nameof(Model.TimeTo))
                        </div>
                        <div class="col-md-7 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.SourceBirthTime)
                            @Html.DropDownListFor(x => x._model.SourceBirthTime, Model.SourceColection, null, Model.ReadOnly ? new { @disabled = "disabled", id = "cmbSource", @class = "min_width_combo disabledctrl" } : new { id = "cmbSource", @class = "min_width_combo" })
                        </div>
                        
                        <div class="col-md-5 form-group text-dark font-weight-bold mt-lg-3">
                            @Html.LabelFor(x => x._model.AdditionalHours)
                            @Html.DropDownListFor(x => x._model.AdditionalHours, Model.TimeShifts, null, Model.ReadOnly ? new { @disabled = "disabled", id = "cmbTimeShifts", @class = "min_width_combo disabledctrl" } : new { id = "cmbTimeShifts", @class = "min_width_combo" })
                        </div>
                        @await Html.PartialAsync("~/Views/UserControls/_EventPlaceView.cshtml", Model.EventPlaceModel, nameof(Model.EventPlaceModel))



                        <div class="col-md-1 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.Sex)
                            @Html.DropDownListFor(x => x._model.Sex, Model.SexCollection, null, Model.ReadOnly ? new { @disabled = "disabled", id = "cmbSex", @class = "min_width_combo disabledctrl" } : new { id = "cmbSex", @class = "min_width_combo" })
                        </div>
                        <div class="col-md-5 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.DataType)
                            @Html.DropDownListFor(x => x._model.DataType, Model.DataTypeCollection, null, Model.ReadOnly ? new { @disabled = "disabled", id = "cmbDataType", @class = "min_width_combo disabledctrl" } : new { id = "cmbDataType", @class = "min_width_combo" })
                        </div>
                        <div class="col-md-5 form-group text-dark font-weight-bold">
                            @Html.LabelFor(x => x._model.Email)
                            @Html.EditorFor(x => x._model.Email, Model.ReadOnly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control disabledctrl", width = "300px" } } : new { htmlAttributes = new { @class = "form-control", width = "300px" } })
                            <div class="row ml-lg-1">
                                @Html.ValidationMessageFor(x => x._model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mt-lg-5">
                            @if (!Model.ReadOnly)
                            {
                                <div class="form-group ml-lg-4">
                                    <button type="submit" class="nostr_btn">Save</button>
                                </div>
                            }
                            <div class="@Model.GetClassCancel()">
                                <input type="button" value="@Model.GetCancelLabel()" onclick="location.href='@Url.Action("HomePage", "Home")'" class="nostr_btn" />
                            </div>
                        </div>
</fieldset>

                </div>
            </section>
        }

    </div>
    <div class="col-md-5 bg-secondary" style="min-height:300px;">
        @if (Model._model.Id > 0)
        {
            <div class="row mt-2">
                @await Html.PartialAsync("~/Views/UserControls/_KeyWordsManagerMain.cshtml", Model.KWCollection, nameof(Model.KWCollection))
            </div>
            <div class="row  mt-2">
                @await Html.PartialAsync("~/Views/UserControls/Tables/_PersonalEventsCollectionView.cshtml", Model.EventsCollection, nameof(Model.EventsCollection))
            </div>
            <div class="row  mt-2">
                @await Html.PartialAsync("~/Views/UserControls/_PictureViewerView.cshtml", Model.PicturesViewer, nameof(Model.PicturesViewer))
            </div>
            <div class="row  mt-2 mb-4">
                @await Html.PartialAsync("~/Views/UserControls/MapNotes/_MapNotesView.cshtml", Model.MapNotes, nameof(Model.MapNotes))
            </div>
        }
    </div>
</div>

<script>


    $(document).ready(function () {
        $("#timeTo").hide();

        $("#rbExact").on("click", function () {
            $("#timeTo").hide();
        });
        $("#rbInterval").on("click", function () {
            $("#timeTo").show();
        });
        //$("#cmbSource").on("change", function () {
        //    var id = $("#cmbSource option=selected").val();
        //    if (id != 1 && id != 2 && id != 3 && id != 7 && id != 10 && id != 11 && id != 12) {
        //        $("#timeTo").show();
        //    }
        //    else {
        //        $("#timeTo").hide();
        //    }
        //});

    });
</script>
